const app = require('../app');
const debug = require('debug')('TaskX:server');
const http = require('http');

const initialPort = parseInt(process.env.PORT, 10) || 3001;
const portIncrementStep = 1;

startServer(initialPort);

function startServer(port) {
  const server = http.createServer(app);

  server.listen(port);
  server.on('error', onError);
  server.on('listening', onListening);

  function onError(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }

    if (error.code === 'EADDRINUSE') {
      console.error(`Port ${port} is already in use`);
      console.error(`Trying port ${port + portIncrementStep}...`);
      startServer(port + portIncrementStep);
    } else {
      var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
      switch (error.code) {
        case 'EACCES':
          console.error(bind + ' requires elevated privileges');
          process.exit(1);
        default:
          throw error;
      }
    }
  }

  function onListening() {
    const addr = server.address();
    var bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
    debug('Listening on ' + bind);

    console.log('Server running at http://localhost:' + addr.port);
  }
}
